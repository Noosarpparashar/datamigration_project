CREATE STORAGE INTEGRATION AWS_STORAGE_INT_B TYPE = EXTERNAL_STAGE STORAGE_PROVIDER = 'S3'
ENABLED = TRUE STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::557690586997:role/snowpipe_role2'
STORAGE_ALLOWED_LOCATIONS = ('s3://snowflake-youtube-chapter3');

DESC INTEGRATION AWS_STORAGE_INT_B;

CREATE OR REPLACE FILE FORMAT my_parquet_format
TYPE = 'PARQUET';




-- CREATE OR REPLACE FILE FORMAT my_csv_format_with_header
-- TYPE = 'CSV'
-- FIELD_OPTIONALLY_ENCLOSED_BY = '"'
-- SKIP_HEADER = 1
-- FIELD_DELIMITER = ',';




CREATE OR REPLACE STAGE MY_S3_STAGE
URL = 's3://snowflake-youtube-chapter3/inboxParquet/'
STORAGE_INTEGRATION = AWS_STORAGE_INT_B
FILE_FORMAT = my_parquet_format;


LIST @MY_S3_STAGE;




CREATE OR REPLACE PIPE MY_SNOWPIPE
AUTO_INGEST=TRUE
AS
COPY INTO MYDB.PUBLIC.FRAUD_DETECTION1
FROM @MY_S3_STAGE
FILE_FORMAT = my_parquet_format
MATCH_BY_COLUMN_NAME=CASE_INSENSITIVE;

SHOW PIPES;


CREATE OR REPLACE TABLE fraud_detection1 (
    accountNumber STRING,
    customerId STRING,
    creditLimit FLOAT,
    availableMoney FLOAT,
    transactionAmount FLOAT,
    posEntryMode STRING,
    posConditionCode STRING,
    cardCVV STRING,
    enteredCVV STRING,
    cardLast4Digits STRING,
    currentBalance FLOAT,
    cardPresent BOOLEAN,
    posOnPremises STRING,
    recurringAuthInd STRING,
    expirationDateKeyInMatch BOOLEAN
);

select count(*) from fraud_detection1
select * from fraud_detection1

